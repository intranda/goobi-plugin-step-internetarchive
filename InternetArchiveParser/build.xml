<?xml version="1.0"?>

<project name="Wellcome FTP Migrator" basedir="." default="deploy">

	<!-- ================================= 
	        properties             
	     ================================= -->
	<property name="filename" value="InternetArchiveParser" />
	<property name="dir.build" value="bin" />
	<property name="dir.src" value="src" />
	<property name="dir.lib" value="lib" />
	<property name="dir.lib.test" value="lib-test" />
	<property name="dir.test" value="test/src" />
	<property name="dir.deploy" value="deploy" />
	<property name="dir.javadoc" value="doc" />
	<property name="dir.pmd" value="/opt/pmd" />
	<property name="classloader.zip" value="./jar-in-jar-loader.zip" />
	<property name="main.rsrc" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader" />
	<property name="main.class" value="de.intranda.goobi.plugins.InternetArchiveParser" />


	<path id="classpath">
		<fileset dir="${dir.lib}" includes="**/*.jar" />
	</path>

	<path id="classpath-test">
		<fileset dir="${dir.lib}" includes="**/*.jar"/>
		<fileset dir="${dir.lib.test}" includes="**/*.jar"/> 
		<pathelement location="${dir.build}" />
	</path>

	<path id="pmd.classpath">
		<fileset dir="${dir.pmd}">
			<include name="*.jar" />
		</fileset>
	</path>

	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath">
	</taskdef>


	<tstamp>
		<format property="tstamped-file-name" pattern="yyyy-MM-dd" locale="en,UK" />
	</tstamp>

	<!-- ================================= 
         General targets: clean, createDirs, git.revision
	     ================================= -->

	<!-- Clean up generated and compiled files. -->
	<target name="clean" description="Clean up generated and compiled files.">
		<echo>Cleaning up workspace...</echo>
		<!--<delete dir="${dir.build}" />-->
		<delete dir="${dir.deploy}" />

	</target>

	<!-- Create needed directories -->
	<target name="createDirs" description="Create needed directories.">
		<echo>Creating needed directories...</echo>
		<mkdir dir="${dir.build}" />
		<mkdir dir="${dir.deploy}" />
		<mkdir dir="testreports" />

	</target>

	<!-- Store git revision in internal variable -->
	<target name="git.revision" description="Store git revision in ${repository.version}">
		<exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
			<arg value="describe" />
			<arg value="--tags" />
			<arg value="--always" />
			<arg value="HEAD" />
		</exec>
		<condition property="repository.version" value="${git.revision}" else="unknown">
			<and>
				<isset property="git.revision" />
				<length string="${git.revision}" trim="yes" length="0" when="greater" />
			</and>
		</condition>
		<echo> Git revision is: ${git.revision}</echo>
	</target>


	<!-- ================================= 
         Compile the sources
	     ================================= -->

	<target name="compile">
	
		<copy file="${dir.src}/log4j.properties" tofile="${dir.build}/log4j.properties" />
		<echo>Using jenkins compiler</echo>
		<javac destdir="${dir.build}" includeantruntime="false" debug="true">
			<classpath refid="classpath" />
			<compilerarg value="-Xlint" />
			<src path="src" />
		</javac>
	</target>

	<!-- ================================= 
         Include the libraries
	     ================================= -->



	<target name="libs">
		<pathconvert property="libs.project" pathsep=" ">
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*" to="*" />
				</chainedmapper>
			</mapper>
			<path>
				<fileset dir="lib">
					<include name="*jar" />
				</fileset>
			</path>
		</pathconvert>
	</target>



	<!-- ================================= 
	              RUNNABLE JAR
		 ================================= -->



	<target name="jar.runnable" depends="git.revision, createDirs, libs" description="Create jar and MANIFEST.MF">
		<copy file="${dir.src}/log4j.properties" tofile="${dir.build}/log4j.properties" />
		<pathconvert property="libs.project" pathsep=" ">
			<mapper>
				<chainedmapper>
					<!-- remove absolute path -->
					<flattenmapper />
					<globmapper from="*" to="*" />
				</chainedmapper>
			</mapper>
			<path>
				<!-- lib.home contains all jar files -->
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
			</path>
		</pathconvert>
		<!-- create the jar -->
		<jar jarfile="${dir.deploy}/${filename}.jar" basedir="${dir.build}">
			<fileset dir="lib" />
			<zipfileset src="${classloader.zip}" />
			<manifest>
				<attribute name="Rsrc-Class-Path" value="./ ${libs.project}" />
				<attribute name="Class-Path" value="." />
				<attribute name="Main-Class" value="${main.rsrc}" />
				<attribute name="Rsrc-Main-Class" value="de.intranda.ftp.controller.ContentMigrator" />
			</manifest>
		</jar>
	</target>


	<!-- ================================= 
                  DISTRIBUTION
	     ================================= -->

	<!-- Run all targets in appropiate order for clean compile-->
	<target name="dist" depends="javadoc, junit, pmd, jar.runnable" description="Creating everything for Jenkins.">


	</target>

	<target name="javadoc">
		<delete dir="${dir.javadoc}" />
		<mkdir dir="${dir.javadoc}" />
		<!-- create javadocs -->
		<javadoc destdir="${dir.javadoc}" sourcepath="${dir.src}" Author="true" version="true" Use="true" noindex="true" Windowtitle="intranda
	Licenceserver JavaDoc References" Doctitle="intranda Plugin JavaDoc References" bottom="Copyright 2013, inranda GmbH" encoding="UTF8">
			<classpath refid="classpath">
			</classpath>
		</javadoc>
	</target>

	<target name="junit" depends="clean, createDirs, compile">
 
		
		
		<javac destdir="${dir.build}" includeantruntime="false" debug="true">
			<classpath refid="classpath-test" />
			<compilerarg value="-Xlint" />
			<src path="${dir.test}" />
			<src path="${dir.src}" />
		</javac>

		<junit haltonerror="true" haltonfailure="true" tempdir="/tmp">

			<classpath refid="classpath-test" />
			<formatter type="xml" usefile="true" />
			<test name="de.intranda.TestAll" todir="testreports" />
		</junit>


	</target>






	<!-- ================================= 
                  DEPLOY
	     ================================= -->

	<!-- Default target that compiles the jar from eclipse and copies it to the right folder depending on operating system-->
	<target name="deploy" depends="jar.runnable" description="Default target for Eclipse compiling with correct deployment">

		<echo>intranda... alles ist gut!</echo>
	</target>

	<target name="pmd">
		<pmd>
			<sourceLanguage name="java" version="1.7" />
			<ruleset>/opt/pmd-bin-5.0.2/conf/intranda_pmd.xml</ruleset>
			<formatter type="xml" toFile="pmd.xml" />
			<fileset dir="${dir.src}">
				<include name="**/*.java" />
			</fileset>
		</pmd>
	</target>
	

</project>
